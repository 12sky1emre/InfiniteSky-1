// This file is part of InfiniteSky.
// Copyright (c) InfiniteSky Dev Teams - Licensed under GNU GPL
// For more information, see LICENCE in the main folder

// TODO: Populate with real data from faction/zone / world state
var WorldDataPacket = new Buffer([0x17, 0x05, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9E, 0x2C, 0x00, 0x00, 0xC8, 0x34, 0x00, 0x00, 0xAA, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);

var WorldAuthPacket = restruct.
	string('Username', 14).
	string('CharacterName', 13).
	int32lu('MapID').
	int32lu('Slot').
	int32lu('Unknown3').
	int32lu('Unknown4').
	int32lu('Unknown5').
	int32lu('Unknown6').
	int32lu('Unknown7').
	int32lu('Unknown8').
	int32lu('Unknown9').
	int32lu('Unknown10').
	int32lu('Unknown11').
	int32lu('Unknown12').
	int32lu('Unknown13').
	int32lu('Unknown14').
	int32lu('Unknown15').
	int32lu('Unknown16').
	int32lu('Unknown17').
	int32lu('Unknown18').
	int32lu('Unknown19').
	int32lu('Unknown20').
	int32lu('Unknown21').
	string('Unknown22', 3).
	int32lu('Unknown23').
	int8lu('UnknownByte', 1);

	console.log('WorldAuthPacket Size: '+WorldAuthPacket.size);

WorldCharacterInfoPacket = restruct.
	int8lu('PacketID').
	int8lu('Status').
	struct('character',structs.Character).
	int8lu('Unknown');

WorldPC.Set(0x02, {
	Restruct: WorldAuthPacket,

	function: function World_Login(socket, input) {
		console.log('Zone Transfer completed for user ' + input.Username + ' on character ' + input.CharacterName + ' Map ID: ' + socket.character.MapID);
		// Add the socket/client to the Zone.
		// Send Character Info
		console.log('Sending WorldCharacterInfoPacket');
		socket.write(
		new Buffer(
		WorldCharacterInfoPacket.pack({
			PacketID: 0x16,
			Status: 0,
			character: socket.character,
			Unknown: 0x00
		})));

		// Send Faction/Zone Packets
		// Yeah I know sync is bad but its for testing purposes :P
		// We MUST move this into a packet rather than using a file sometime soon.
		socket.write(WorldDataPacket);
		//socket.write(fs.readFileSync('./data/WorldDataPacket/World1.pac'));
		// socket.write(WorldDataPacket.ActionReplyPacket.pack({
		// 	AccountID: 12
		// }));
		// Set to authenticated, add too zone
		//int8lu('Status').
		//struct('character',structs.Character).
		//int8lu('Unknown');
		//console.log(socket.character.state);
		//asocket.character.state.setFromCharacter(socket.character);
		//console.log(socket.character.state);
		//socket.write(socket.character.state.getPacket());

		socket.authenticated = true;
		//socket.character.state.Skill = 0;
		socket.Zone.addSocket(socket);
		//socket.character.state.Skill = 1;
		//Username
		//CharacterName
		//MapID
		// Validate its map id again? meh...
		// Validate its CharacterName maybe :P.
		// We are in World :D
		//console.log('Should be in World');
	}
});